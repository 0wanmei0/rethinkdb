#!/usr/bin/env python

import os, time
import flask
import simple_linear_db

assert __name__ == "__main__"

app = flask.Flask(__name__)

@app.template_filter("duration")
def jinja_duration_filter(seconds):
    seconds = int(seconds)
    return "%0.2d:%0.2d:%0.2d" % (seconds // 3600, seconds // 60 % 60, seconds % 60)

@app.template_filter("duration_to_now")
def jinja_duration_to_now_filter(timestamp):
    return jinja_duration_filter(time.time() - timestamp) + "..."

@app.route("/")
def list():
    builds = simple_linear_db.read_linear_db("build-log.txt")
    build_urls = dict((build, flask.url_for("build", name = build)) for build in builds)
    tests = simple_linear_db.read_linear_db("test-log.txt")
    test_urls = dict((test, flask.url_for("test", name = test)) for test in tests)
    with open("output.txt") as log_file:
        return flask.render_template("list.html",
            builds = builds, build_urls = build_urls,
            tests = tests, test_urls = test_urls,
            log = log_file.read()
            )

@app.route("/build/<name>")
def build(name):
    build = simple_linear_db.read_linear_db("build-log.txt")[name]
    if os.path.exists("builds/%s.txt" % name):
        with open("builds/%s.txt" % name) as output_file:
            output = output_file.read()
    else:
        output = None
    return flask.render_template("build.html",
        name = name,
        build = build,
        output = output
        )

@app.route("/test/<name>")
def test(name):
    test = simple_linear_db.read_linear_db("test-log.txt")[name]
    if os.path.exists("test/%s/output.txt" % name):
        with open("tests/%s/output.txt" % name) as output_file:
            output = output_file.read()
    else:
        output = None
    return flask.render_template("test.html",
        name = name,
        test = test,
        output = output
        )

app.debug = True

from wsgiref.handlers import CGIHandler
CGIHandler().run(app)
