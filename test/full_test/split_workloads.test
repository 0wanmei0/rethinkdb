workloads = [
    ("$RETHINKDB/bench/stress-client/stress -s $HOST:$PORT -w 0/0/1/0 -d 10000q",
     "true"),
    ("$RETHINKDB/test/workloads/many_keys.py $HOST:$PORT --phase w",
     "$RETHINKDB/test/workloads/many_keys.py $HOST:$PORT --phase r"),
    ("$RETHINKDB/test/workloads/serial_mix.py $HOST:$PORT --save values",
     "$RETHINKDB/test/workloads/serial_mix.py $HOST:$PORT --load values"),
    ("$RETHINKDB/test/workloads/multi_serial_mix.py $HOST:$PORT --save values",
     "$RETHINKDB/test/workloads/multi_serial_mix.py $HOST:$PORT --load values"),
    ]

scenarios = [
    "$RETHINKDB/test/scenarios/rebalance.py '%(workload1)s' '%(workload2)s'",
    "$RETHINKDB/test/scenarios/change_primary.py --workload-before '%(workload1)s' --workload-after '%(workload2)s'",
    "$RETHINKDB/test/scenarios/failover_to_secondary.py --workload-before '%(workload1)s' --workload-after '%(workload2)s'",
    "$RETHINKDB/test/scenarios/more_or_less_secondaries.py --more --workload-before '%(workload1)s' --workload-after '%(workload2)s'",
    "$RETHINKDB/test/scenarios/more_or_less_secondaries.py --less --workload-before '%(workload1)s' --workload-after '%(workload2)s'",
    "$RETHINKDB/test/scenarios/kill_secondary.py --workload-before '%(workload1)s' --workload-after '%(workload2)s'",
    "$RETHINKDB/test/scenarios/transfer.py '%(workload1)s' '%(workload2)s'",
    ]

for scenario in scenarios:
    for w1, w2 in workloads:
        do_test(
            scenario % {"workload1": w1, "workload2": w2},
            repeat = 3,
            inputs = ["build/debug/rethinkdb", "test/scenarios", "test/common", "test/workloads", "bench/stress-client/stress"]
            )
