#!/bin/bash
. `cd -P -- "$(dirname $0)" && pwd -P`/init.sh
load_conf "$1"

server_hosts=$PREFIX-server-hosts
client_hosts=$PREFIX-client-hosts

# seq -f "$PREFIX-server-%g" $SERVERS \
#     | parallel -uj0 new_instance \
#     > $server_hosts &
# seq -f "$PREFIX-client-%g" $CLIENTS \
#     | parallel -uj0 new_instance \
#     > $client_hosts &
# wait

servers=":::: $server_hosts ::: `seq $SERVER_INSTANCES`"
clients=":::: $client_hosts ::: `seq $CLIENT_INSTANCES`"
jline=`parallel 'printf -- " -j {1}:$(({2}+$CLUSTER_PORT))"' $servers`

# echo "Resetting $STAGING on servers..."
# parallel -uj0 "ssh_to {1} <<EOF
# sudo rm -rf $STAGING
# sudo mkdir -p $STAGING
# sudo chown ubuntu $STAGING
# EOF" :::: $server_hosts

# echo "Distributing $RETHINKDB_DIR (symbols stripped for speed)..." >&2
# d=`mktemp -d`
# { cp $RETHINKDB_DIR/rethinkdb $d; strip $d/rethinkdb; } &
#   cp -r $RETHINKDB_DIR/rethinkdb_web_assets $d &
# wait
# { pushd $d >/dev/null; tar -czf f.tgz *; popd >/dev/null; }
# parallel -uj0 "pv $d/f.tgz | ssh_to {1} 'cd $STAGING && tar -xzf -'" :::: $server_hosts
# rm -r $d &

rm rethinkdb_for_admin
ln -s $RETHINKDB_DIR/rethinkdb rethinkdb_for_admin

parallel -uj0 "n={1}; n=\${n%%.*}; n=\${n#ec2-*-}; n+=-{2}; n=\$(echo \$n | tr - _);
ssh_to {1} <<EOF
cd $STAGING
rm -r {2}
mkdir -p {2}
cd {2}
set -m
</dev/null nohup ../rethinkdb $jline -o {2} -n \$n --bind all >stdout.log 2>stderr.log &
EOF" $servers

poc=`head -1 $server_hosts`
poc_offset=1
echo "Designating $poc (offset $poc_offset) our point of contact..."

web_port=`free_port | tee web_port`
target_web_port=$((WEB_PORT+poc_offset))
tunnel_to $poc $web_port $target_web_port
client_port=`free_port $web_port | tee client_port`
target_client_port=$((CLIENT_PORT+poc_offset))
tunnel_to $poc $client_port $target_client_port
cluster_port=`free_port $client_port | tee cluster_port`
target_cluster_port=$((CLUSTER_PORT+poc_offset))
tunnel_to $poc $cluster_port $target_cluster_port
cat <<EOF
Tunneling:
  Web:     `hostname`:$web_port -> $poc:$target_web_port
  ReQL:    `hostname`:$client_port -> $poc:$target_client_port
  Cluster: `hostname`:$cluster_port -> $poc:$target_cluster_port
EOF

# db=`admin create database testbench | awk 'END {print $2}'`
db=9b58e02d-2c3a-49db-bb92-e17a4f6130e2
for i in `seq $TABLES`; do cat /proc/sys/kernel/random/uuid | tr - _; done >tables
parallel -vuj0 create_table {} $TABLE_SHARDS $TABLE_REPLICAS $TABLE_ACKS :::: tables

# main_server=`head -1 $server_hosts`
# <$server_hosts parallel -uj0 setup_server

wait
