#!/bin/bash
. `cd -P -- "$(dirname $0)" && pwd -P`/init.sh

load_conf "$1"

server_hosts=$PREFIX-server-hosts
client_hosts=$PREFIX-client-hosts

# seq -f "$PREFIX-server-%g" $SERVERS \
#     | parallel -uj0 new_instance \
#     > $server_hosts &
# seq -f "$PREFIX-client-%g" $CLIENTS \
#     | parallel -uj0 new_instance \
#     > $client_hosts &
# wait

servers=":::: $server_hosts ::: `seq $SERVER_INSTANCES`"
clients=":::: $client_hosts ::: `seq $CLIENT_INSTANCES`"
jline=`parallel 'printf -- " -j {1}:$(({2}+$CLUSTER_PORT))"' $servers`

# echo "Resetting $STAGING on servers..."
# parallel -uj0 "ssh_to {1} <<EOF
# sudo rm -rf $STAGING
# sudo mkdir -p $STAGING
# sudo chown ubuntu $STAGING
# EOF" :::: $server_hosts

# echo "Distributing $RETHINKDB_DIR (symbols stripped for speed)..." >&2
# d=`mktemp -d`
# { cp $RETHINKDB_DIR/rethinkdb $d; strip $d/rethinkdb; } &
#   cp -r $RETHINKDB_DIR/rethinkdb_web_assets $d &
# wait
# { pushd $d >/dev/null; tar -czf f.tgz *; popd >/dev/null; }
# parallel -uj0 "pv $d/f.tgz | ssh_to {1} 'cd $STAGING && tar -xzf -'" :::: $server_hosts
# rm -r $d &

parallel -vuj0 "n={1}; n=\${n%%.*}; n=\${n#ec2-*-}; n+=-{2}; n=\$(echo \$n | tr - _);
ssh_to {1} <<EOF
cd $STAGING
rm -r {2}
mkdir -p {2}
cd {2}
set -m
</dev/null nohup ../rethinkdb $jline -o {2} -n \$n --bind all >stdout.log 2>stderr.log &
EOF" $servers

poc=`head -1 $server_hosts`
poc_offset=1
echo "Designating $poc (offset $poc_offset) our point of contact..."

# web_port=`free_port`
# target_web_port=$((WEB_PORT+poc_offset))
# nohup ssh -nNL \*:$web_port:localhost:$target_web_port
# cluster_port=`free_port`
# client_port`free_port`

# echo "Tunneling `hostname`:$port -> $poc:$((CLUSTER_PORT+

# # main_server=`head -1 $server_hosts`
# # <$server_hosts parallel -uj0 setup_server

# wait
