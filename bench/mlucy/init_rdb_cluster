#!/bin/bash
. `cd -P -- "$(dirname $0)" && pwd -P`/init.sh

hosts=$1
num_shards=$2
rdb_dir=$3
staging=$4
servers="::: $hosts ::: `seq $num_shards`"

echo "Resetting $staging on servers..." >&2
parallel -uj0 "ssh_to {1} <<EOF
sudo killall rethinkdb
sudo rm -rf $staging/*
sudo mkdir -p $staging/.persist
sudo chown -R ubuntu $staging
EOF" ::: $hosts

echo "Distributing $rdb_dir (symbols stripped for speed)..." >&2
d=`mktemp -d`
{ cp $rdb_dir/rethinkdb $d; strip $d/rethinkdb; } &
cp -r $rdb_dir/rethinkdb_web_assets $d &
wait
# { pushd $d >/dev/null; tar -czf f.tgz *; popd >/dev/null; }
parallel -uj0 "rsync_to '$d/*' {1} $staging/.persist" ::: $hosts

# parallel -uj0 "pv $d/f.tgz | ssh_to {1} 'cd $staging && tar -xzf -'" ::: $hosts
rm -r $d &

jline=`parallel 'printf -- " -j {1}:$(({2}+$CLUSTER_PORT))"' $servers`
parallel -uj0 "n={1}; n=\${n%%.*}; n=\${n#ec2-*-}; n+=-{2}; n=\$(echo \$n | tr - _);
ssh_to {1} <<EOF
cd $staging
rm -rf {2}
mkdir -p {2}
cd {2}
set -m
</dev/null nohup ../.persist/rethinkdb $jline -o {2} -n \$n --bind all >1.log 2>2.log &
EOF" $servers

wait
