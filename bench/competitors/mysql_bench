#!/bin/bash

# Set up the directory
BENCH_DIR="$HOME/competitor_bench/MySQL"
rm -rf "$BENCH_DIR"
mkdir -p "$BENCH_DIR"
exec > "$BENCH_DIR/full_bench.log" 2>&1

# Horrible but working way of finding the argument after --email.
email="$(perl -e 'use List::Util qw(first); my $email_idx = 1 + first { $ARGV[$_] eq "--email" } 0 .. $#ARGV; print $ARGV[$email_idx]' -- "$@")"

# Build the stress client
cd bench/stress-client
make
scp stress dr-doom:/home/teapot/stress
cd ../dbench

MYSQL_COMMON_FLAGS="--innodb_support_xa=off --innodb_lock_wait_timeout=5 --innodb_flush_method=O_DIRECT --max-connections=600"
MYSQL_BUFFER_FLAGS="--innodb_buffer_pool_size=32768m"
MYSQL_DURABILITY_FLAGS="--innodb_flush_log_at_trx_commit=0 --innodb_doublewrite=0 --innodb_log_file_size=256m"

DATABASE="mysql"

# TODO: Consider / Benchmark influence of "cache warmup" (e.g. check what happens with longer test durations)

# Run workloads
for WORKLOAD in ../workloads/*; do
    if [ -d "$WORKLOAD" ]; then
        echo -e "n\E[37;44m\033[1m<----- Running workload in $WORKLOAD ----->\033[0m\n"
        export BENCH_DIR
        export SSD_DRIVES
        export HDD_DRIVES
        export DATABASE
        export MYSQL_COMMON_FLAGS
        export MYSQL_BUFFER_FLAGS
        export MYSQL_DURABILITY_FLAGS
    
        if [ -e "$WORKLOAD/Setup" ]; then
            "$WORKLOAD/Setup"
        fi
        
        for CONFIGURATION in $( find "$WORKLOAD" -type f -name "R*" | sort ); do
            echo -e "\n\033[1mRunning $CONFIGURATION\033[0m"
            if [ -e "$BENCH_DIR/environment" ]; then
                . "$BENCH_DIR/environment"
            fi
            $CONFIGURATION
        done
        
        if [ -e "$WORKLOAD/Teardown" ]; then
            if [ -e "$BENCH_DIR/environment" ]; then
                . "$BENCH_DIR/environment"
            fi
            "$WORKLOAD/Teardown"
        fi
        
        if [ -e "$BENCH_DIR/environment" ]; then
            rm -f "$BENCH_DIR/environment"
        fi
    fi
done

# TODO:
# Out of RAM performance
# Core/CPU scalability
# Concurrent clients scalability
# Canonical workload on HDD performance


# Now that all benchmarks are done, delete any database files that might have been left over
#delete_database_files
